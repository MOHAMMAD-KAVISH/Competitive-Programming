#include <vector>
#include <algorithm>
using namespace std;

vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
    vector<vector<int>> mergedIntervals;
    int n = intervals.size();
    int i = 0;
    
    // Add all intervals that come before the new interval
    while (i < n && intervals[i][1] < newInterval[0]) {
        mergedIntervals.push_back(intervals[i]);
        ++i;
    }
    
    // Merge intervals that overlap with the new interval
    while (i < n && intervals[i][0] <= newInterval[1]) {
        newInterval[0] = min(newInterval[0], intervals[i][0]);
        newInterval[1] = max(newInterval[1], intervals[i][1]);
        ++i;
    }
    
    // Add the merged interval
    mergedIntervals.push_back(newInterval);
    
    // Add all intervals that come after the new interval
    while (i < n) {
        mergedIntervals.push_back(intervals[i]);
        ++i;
    }
    
    return mergedIntervals;
}
