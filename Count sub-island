class Solution {
public:
    bool dfs(vector<vector<int>>& grid1, vector<vector<int>>& grid2,int i,int j){
        if(i<0||i>=grid1.size()||j<0||j>=grid1[0].size()||grid2[i][j]==0){
            return true;
        }

        grid2[i][j]=0;

        bool check1=grid1[i][j]==1;
        bool up=dfs(grid1,grid2,i-1,j);
        bool down=dfs(grid1,grid2,i+1,j);
        bool left=dfs(grid1,grid2,i,j-1);
        bool right=dfs(grid1,grid2,i,j+1);

        return check1&&up&&down&&left&&right;
    }
    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        int m=grid1.size();
        int n=grid1[0].size();

        int ans=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid2[i][j]==1){
                    if(dfs(grid1,grid2,i,j)){
                        ans++;
                    }
                }
            }
        }
        return ans;
    }
};
