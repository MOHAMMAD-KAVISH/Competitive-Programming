/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root,vector<int>&node){
        if(root==NULL){
            return;
        }
        inorder(root->left,node);
        node.push_back(root->val);
        inorder(root->right,node);
    }
    TreeNode* check(vector<int>&node,int l,int r){
        if(l>r) return NULL;
        int m=(l+r)/2;
        TreeNode* root= new TreeNode(node[m]);
        root->left=check(node,l,m-1);
        root->right=check(node,m+1,r);
        return root;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int>node;
        inorder(root,node);
        return check(node,0,node.size()-1);
    }
};
