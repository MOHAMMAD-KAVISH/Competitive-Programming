class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool dfs(int node,int parent,vector<bool>&vis,vector<int>adj[]){
        vis[node]=1;
        for(int i:adj[node]){
            if(!vis[i]){
                if(dfs(i,node,vis,adj))
                return true;
            }else if(i!=parent){
                return true;
            }
        }
        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<bool>vis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(dfs(i,-1,vis,adj)){
                    return true;
                }
            }
        }
        return false;
    }
};
