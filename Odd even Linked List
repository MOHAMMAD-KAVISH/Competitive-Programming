/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if (!head || !head->next) return head;
        ListNode* temp=head;
        ListNode* evens=nullptr;
        ListNode* evene=nullptr;
        ListNode* odds=nullptr;
        ListNode* odde=nullptr;
        int i=1;
        while(temp!=nullptr){
            if(i%2==0){
                if(evens==NULL){
                    evens=temp;
                }else{
                    evene->next=temp;
                }
                evene=temp;
            }else{
                if(odds==nullptr){
                    odds=temp;
                }else{
                    odde->next=temp;
                }
                odde=temp;
            }
            temp=temp->next;
            i++;
        }
        odde->next=evens;
        evene->next=nullptr;
        head=odds;
        return head;
   
    }
};
