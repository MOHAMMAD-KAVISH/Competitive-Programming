#include <vector>
#include <unordered_map>

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        // Create an unordered map to store the indices of elements
        unordered_map<int, int> num_indices;

        // Iterate through the array
        for (int i = 0; i < nums.size(); ++i) {
            // Calculate the complement needed to reach the target
            int complement = target - nums[i];

            // Check if the complement is already in the map
            if (num_indices.find(complement) != num_indices.end()) {
                // If found, return the indices of the two numbers
                return {num_indices[complement], i};
            }

            // If not found, store the current element and its index in the map
            num_indices[nums[i]] = i;
        }

        // If no solution is found, return an empty vector or handle it as appropriate
        return {};
    }
};
