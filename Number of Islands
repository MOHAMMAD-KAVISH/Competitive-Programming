class Solution {
  public:
    // Function to find the number of islands.
    void dfs(vector<vector<char>>&grid,int i,int j){
        int r=grid.size();
        int c=grid[0].size();
        if(i<0||i>=r||j<0||j>=c||grid[i][j]=='0'){
            return;
        }
        grid[i][j]='0';
        dfs(grid,i-1,j);
        dfs(grid,i-1,j-1);
        dfs(grid,i-1,j+1);
        dfs(grid,i,j+1);
        dfs(grid,i,j-1);
        dfs(grid,i+1,j-1);
        dfs(grid,i+1,j);
        dfs(grid,i+1,j+1);
        // vector<int> dRow = {-1, -1, -1, 0, 0, 1, 1, 1};
        // vector<int> dCol = {-1, 0, 1, -1, 1, -1, 0, 1};
        
        // for (int k = 0; k < 8; ++k) {
        //     dfs(grid, i + dRow[k], j + dCol[k]);
        // }
    }
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        if(grid.empty()) return 0;
        int r=grid.size();
        int c=grid[0].size();
        int count=0;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]=='1'){
                count++;
                dfs(grid,i,j);
                }
            }
        }
        return count;
    }
};
