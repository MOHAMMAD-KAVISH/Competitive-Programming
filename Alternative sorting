#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> rearrangeArray(vector<int>& arr) {
    // Step 1: Sort the array in ascending order
    sort(arr.begin(), arr.end());

    int n = arr.size();
    vector<int> result(n);

    // Step 2: Use two pointers for interleaving
    int left = 0;           // Pointer for smallest elements
    int right = n - 1;       // Pointer for largest elements

    bool pickLargest = true; // Toggle to pick largest/smallest alternatively

    for (int i = 0; i < n; ++i) {
        if (pickLargest) {
            result[i] = arr[right--];  // Pick the largest available element
        } else {
            result[i] = arr[left++];   // Pick the smallest available element
        }
        pickLargest = !pickLargest;    // Toggle the choice
    }

    return result;
}

int main() {
    vector<int> arr1 = {7, 1, 2, 3, 4, 5, 6};
    vector<int> arr2 = {1, 6, 9, 4, 3, 7, 8, 2};

    auto res1 = rearrangeArray(arr1);
    auto res2 = rearrangeArray(arr2);

    cout << "Output 1: ";
    for (int num : res1) cout << num << " ";
    cout << endl;

    cout << "Output 2: ";
    for (int num : res2) cout << num << " ";
    cout << endl;

    return 0;
}
