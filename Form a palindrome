#include <iostream>
#include <vector>
#include <string>
using namespace std;

int minInsertions(string str) {
    int n = str.size();
    vector<vector<int>> dp(n, vector<int>(n, 0));

    for (int length = 2; length <= n; ++length) {
        for (int i = 0; i <= n - length; ++i) {
            int j = i + length - 1;
            if (str[i] == str[j]) {
                dp[i][j] = dp[i + 1][j - 1];
            } else {
                dp[i][j] = min(dp[i + 1][j], dp[i][j - 1]) + 1;
            }
        }
    }

    return dp[0][n - 1];
}

int main() {
    string str1 = "abcd";
    string str2 = "aa";

    cout << "Minimum insertions for '" << str1 << "' to become a palindrome: " << minInsertions(str1) << endl;
    cout << "Minimum insertions for '" << str2 << "' to become a palindrome: " << minInsertions(str2) << endl;

    return 0;
}
